name: Cypress Tests
on:
  workflow_call:
    secrets:
      CYPRESS_TEST_USER_EMAIL:
        required: true
      CYPRESS_TEST_USER_PASS:
        required: true
jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
      - name: Set URL for Staging
        if: github.ref_name == 'main'
        run: echo "BASE_URL=https://tn-spa-bootstrapper-staging.herokuapp.com/" >> $GITHUB_ENV
      - name: Set URL for PR
        if: success() && steps.findPr.outputs.number
        run: echo "BASE_URL=https://tn-spa-bootstrapper-pr-${PR}.herokuapp.com/" >> $GITHUB_ENV
        env:
          PR: ${{ steps.findPr.outputs.pr }}
      - name: Raise for error
        if: env.BASE_URL == ''
        run: exit 1
      - name: Raise for maintenance mode
        run: |
          html_body=$(curl ${{ env.BASE_URL }})
          if echo $html_body | grep -q "Offline for Maintenance";
          then
            exit 1
          else
            echo "NOT in maintenance. Likely Heroku trigger after successful deploy";
          fi
      - name: Checkout
        uses: actions/checkout@v2
      - run: pipx install pipenv
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pipenv'
      - name: Install bootstrapper dependencies
        run: pipenv install --dev --deploy
      - run: pipenv run cookiecutter . --no-input -f
      - uses: actions/upload-artifact@v3
        with:
          name: my_project
          path: my_project/
          retention-days: 1
    outputs:
      BASE_URL: ${{ env.BASE_URL }}
  Chrome:
    needs: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: my_project
          path: my_project/
      - name: Install frontend dependencies
        env:
          NPM_CONFIG_PRODUCTION: false
        working-directory: ./my_project/client
        run: npm install
      - name: Run against ${{ needs.Setup.outputs.BASE_URL }}
        uses: cypress-io/github-action@v4
        with:
          working-directory: my_project/client
          browser: chrome
        env: 
          NPM_CONFIG_PRODUCTION: false
          CYPRESS_TEST_USER_EMAIL: ${{ secrets.CYPRESS_TEST_USER_EMAIL }}
          CYPRESS_TEST_USER_PASS: ${{ secrets.CYPRESS_TEST_USER_PASS }}
          CYPRESS_baseUrl: ${{ needs.Setup.outputs.BASE_URL }}
  Firefox:
    needs: Setup
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.2-slim-chrome103-ff102  # https://github.com/cypress-io/cypress-docker-images/tree/master/browsers
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: my_project
          path: my_project/
      - name: Install frontend dependencies
        env:
          NPM_CONFIG_PRODUCTION: false
        working-directory: ./my_project/client
        run: npm install
      - name: Run against ${{ needs.Setup.outputs.BASE_URL }}
        uses: cypress-io/github-action@v4
        with:
          working-directory: my_project/client
          browser: firefox
        env: 
          NPM_CONFIG_PRODUCTION: false
          CYPRESS_TEST_USER_EMAIL: ${{ secrets.CYPRESS_TEST_USER_EMAIL }}
          CYPRESS_TEST_USER_PASS: ${{ secrets.CYPRESS_TEST_USER_PASS }}
          CYPRESS_baseUrl: ${{ needs.Setup.outputs.BASE_URL }}
