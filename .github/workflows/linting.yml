name: Linter
on: [push]

jobs:
  Ruff_bootstrapper:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Setup uv cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-
      - name: Install dependencies
        run: uv sync
      - name: Run Ruff Lint Check
        run: uv run ruff check .
      - name: Run Ruff Format Check
        run: uv run ruff format --check . -q
  Ruff:
    strategy:
      matrix:
        fe_type: [react]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Setup uv cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-
      - name: Install dependencies
        run: uv sync
      - run: |
          config_file="cookiecutter/${{ matrix.fe_type }}_template.yaml"
          uv run cookiecutter . --config-file $config_file --no-input -f
      - name: Run Ruff Lint Check
        run: uv run ruff check --output-format=github my_project/server
      - name: Run Ruff Format Check
        run: uv run ruff format --check my_project/server -q
  Lint_Web:
    strategy:
      matrix:
        fe_type: [react]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Setup uv cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-
      - name: Install dependencies
        run: uv sync
      - run: |
          config_file="cookiecutter/${{ matrix.fe_type }}_template.yaml"
          uv run cookiecutter . --config-file $config_file --no-input -f
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: üì¶ Install dependencies
        env:
          NPM_CONFIG_PRODUCTION: false
        working-directory: ./my_project/client
        run: |
          npm install
      - name: üÜé TypeCheck
        working-directory: ./my_project/client
        run: npm run tslint
      - name: üöß ESLint
        working-directory: ./my_project/client
        run: npm run eslint
  Lint_Mobile:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Setup uv cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-
      - name: Install dependencies
        run: uv sync
      - run: |
          config_file="cookiecutter/rn_template.yaml"
          uv run cookiecutter . --config-file $config_file --no-input -f
      - name: üèó Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - name: üì¶ Install dependencies
        working-directory: ./my_project/mobile
        run: npm install
      - name: üÜé TypeCheck
        working-directory: ./my_project/mobile
        run: npm run lint:tslint
      - name: üöß ESLint
        working-directory: ./my_project/mobile
        run: npm run lint:eslint
