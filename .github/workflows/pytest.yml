name: Unit Tests
on: [push]

jobs:
  Pytest_bootstrapper:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv
        run: pipx install uv
      - name: Setup uv cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-
      - name: Install dependencies
        run: uv pip install -e .
      - name: Test with pytest
        run: uv run pytest
  Pytest:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: my_project_test_db
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      matrix:
        fe_type: [react]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv
        run: pipx install uv
      - name: Setup uv cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('my_project/server/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-uv-
      - name: Install bootstrapper dependencies
        run: uv pip install -e .
      - run: |
          config_file="cookiecutter/${{ matrix.fe_type }}_template.yaml"
          uv run cookiecutter . --config-file $config_file --no-input -f
      - name: Pytest, McCabe, and Coverage
        run: |
          cd my_project
          uv sync
          mkdir -p client/dist/static
          uv run python server/manage.py collectstatic
          uv run pytest --mccabe --cov=my_project -vv server/my_project
          uv run coverage report --fail-under=60
